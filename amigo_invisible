#inicializar variables parejas y solteros
#$pareja1 = (A1,A2)
#$soltero1 = ("C",0)
#$soltero2 = ("D",0)
#$personas = $pareja1 + $soltero1 + $soltero2

[int]$NumPersonas = read-host -Prompt "Introduce el numero de participantes"
[int]$NumParejas = read-host -Prompt "Introduce el numero de parejas"
[int]$NumSolteros =read-host -Prompt "Introduce el numero de solteros"
[int]$parejasLibres = $NumParejas  #iremos reduciendo el numero conforme añadamos parejas a $personas
[int]$solterosLibres = $NumSolteros #iremos reduciendo el numero conforme añadamos parejas a $personas

$personas1=@()*($NumParejas+$NumSolteros)
$personas2=@()*($NumParejas)
$Emailpersonas1=@()*($NumParejas+$NumSolteros)
$Emailpersonas2=@()*($NumParejas)

while($parejasLibres){
	$personas1+= read-host -Prompt "introduce el primer nombre de la pareja $parejasLibres"
	$Emailpersonas1+= read-host -Prompt "introduce su email"
	$personas2+= read-host -Prompt "introduce el segundo nombre de la pareja $parejasLibres"
	$Emailpersonas2+= read-host -Prompt "introduce su email"
	$parejasLibres--
}
while($solterosLibres){
	$personas1+= read-host -Prompt "introduce el nombre del soltero $solterosLibres"
	$Emailpersonas1+= read-host -Prompt "introduce su email"
	$solterosLibres--
}

#escribimos un array escalonado de 1 hasta (parejas+soleteros).length y otro desde 1 hasta parejas.length
[int[]]$APS = 1..($NumParejas+$NumSolteros) #1,2,3,4
[int[]]$AP = ($NumParejas+$NumSolteros+1)..$NumPersonas #5,6

#Elegir la primera columna y elegirlos al azar de los arrays anteriors
$RandomAPS = Get-random -InputObject $APS -Count ([int]::MaxValue)

#Introducimos las parejas del array personas2
foreach ($num in $AP) { #recorremos el array AP que tiene las parejas a2, b2 (5,6)
	[array]$pos = @(1)*$RandomAPS.length #creamos un array de 1s con la longitud de RandomAPS (cuya longitud se incrementa al añadir elementos de AP)
	[int]$i=0
	foreach ($tnum in $RandomAPS) { #recorremos RandomAPS (3,4,2,1) / (3,5,4,2,1)
		if ($tnum -eq $num%($NumParejas+$NumSolteros)){
		#$num%($NumParejas+$NumSolteros)) --> el 5 lo convertimos a 1, el 6 a 2, de modo que $num 5,6; se convierte en 1,2.
		#si tnum (3 en la primera iteracion) no es igual al valor de AP (que es num, (1 en la primera iteracion)) ponemos 0; si es igual ponemos 1
								 #-1  0   1   2   3;  p[-1]=p[3]
			$pos[$i]=0		#3 x 4 x 2 x 1 x, en posicion[$i] cambiamos la x por un 1
			$pos[($i-1)]=0 #y 3 y 4 y 2 y 1, en posicion[$i-1] cambiamos la y por un 1
		}
		$i++
	}
	#una vez tenemos el vector pos, ejemplo [1 1 0 0], elegimos donde vamos a introducir la nueva pareja (que solo podra ir en donde haya un 1)
	for($i=0; $i -lt $APS.length; $i++){
		$pos[$i]=$pos[$i]*$APS[$i] #[1 1 0 0] * [1 2 3 4] = [1 2 0 0]
	}
	
	[System.Collections.ArrayList]$pos=$pos
	while ($pos -contains 0) {
        $pos.Remove(0)
    }
	[int]$NuevaPos = Get-random -InputObject $pos #elegimos randmon entre 1 o 2 de [1 2 0 0] / [1 2 0 0 5]

	#para añadir la nueva pareja, la añadimos primero al principio 5,3,4,2,1 y luego rotamos (3 x 5, 4 x 5, ...) tantas veces como el valor de "nueva pos"
	$RandomAPS=[array]$num+$RandomAPS #añadimos la nueva pareja (AP[0]=5) al principio
	for($i=0; $i -lt $NuevaPos; $i++){ #rotamos desde i=1 hasta que i=Nueva pos
		[int]$temp=$RandomAPS[$i]
		$RandomAPS[$i]=$RandomAPS[$i+1]
		$RandomAPS[$i+1]=$temp
		$RandomAPS
	}
	$APS+=$AP[$num%$APS.length-1]
}
$personas=$personas1+$personas2
$Emailpersonas=$Emailpersonas1+$Emailpersonas2

##################### Funcion enviar Mail #####################
#RandomAPS[-1] le regala a RandomAPS[0] (siendo RandomAPS[-1]=RandomAPS[n])
#RandomAPS[0] le regala a RandomAPS[1]
#...
#RandomAPS[n-1] le regala a RandomAPS[n]
function enviarmail{
	param( [string]$Regala, [string]$Email, [string]$Regalado [string]$password)
	##### www.howtogeek.com/120011/stupid-geek-tricks-how-to-send-email-from-the-command-line-in-windows-without-extra-software/
	##### http://www.howtogeek.com/204088/how-to-use-a-batch-file-to-make-powershell-scripts-easier-to-run/
	##### para que este script funcione es necesario habilitar en https://myaccount.google.com/security el "acceso a aplicaciones menos seguras"
	##### invariables
	$Subject = "Amigo invisible - Navidad"
	$EmailFrom=read-host -Prompt "introduce el correo gmail que enviara los mails"
    $SMTPServer = "smtp.gmail.com"
    $SMTPClient = New-Object Net.Mail.SmtpClient($SmtpServer, 587)
    $SMTPClient.EnableSsl = $true
    $SMTPClient.Credentials = New-Object System.Net.NetworkCredential("$EmailFrom", "$password");
    $Body = "$Regala, te toca regalarle a $Regalado. Sorteo generado el " +(Get-Date -Format g)
    $SMTPClient.Send($EmailFrom, $Email, $Subject, $Body)
}
$password=read-host -Prompt "introduce la pass del correo gmail que enviara los mails"
for ($i=0; $i -lt (2*$NumParejas+$NumSolteros); $i++){ #ejemplo (3,6,1,4,2,5)
	enviarmail $personas[($RandomAPS[($i-1)]-1)] $Emailpersonas[($RandomAPS[($i-1)]-1)] $personas[($RandomAPS[($i)]-1) $password] #(5 regala a 3; 3-6; 6-1; 1-4; 4-2; 2-5.
}
#################################################################
Read-Host -Prompt "Press Enter to exit"
